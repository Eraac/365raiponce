CoreBundle\Entity\Remark:
    exclusion_policy: ALL

    properties:
        id:
            expose: true
        context:
            expose: true
        sentence:
            expose: true
        postedAt:
            expose: true
        createdAt:
            expose: true
            groups: [my, admin]
        updatedAt:
            expose: true
            groups: [admin]
        scaleEmotion:
            expose: true
        email:
            expose: true
            groups: [admin]

    relations:
       # links
        -
            rel: self
            href:
                route: api_get_remark
                parameters:
                    remark_id: expr(object.getId())

        -
            rel: responses
            href:
                route: api_get_remark_responses
                parameters:
                    remark_id: expr(object.getId())

        -
            rel: publish
            href:
                route: api_post_remark_publish
                parameters:
                    remark_id: expr(object.getId())
            exclusion:
                groups: [admin]

        -
            rel: unpublish
            href:
                route: api_post_remark_unpublish
                parameters:
                    remark_id: expr(object.getId())
            exclusion:
                groups: [admin]

        # embedded
        -
            rel: count_published_responses
            embedded:
                content: expr(object.countPublishedResponses())
            exclusion:
                groups: [stats]

        -
            rel: count_unpublished_responses
            embedded:
                content: expr(object.countUnpublishedResponses())
            exclusion:
                groups: [stats, admin]

        -
            rel: count_vote_is_sexist
            embedded:
                content: expr(object.getCountVoteIsSexist())
            exclusion:
                groups: [stats]

        -
            rel: count_vote_already_lived
            embedded:
                content: expr(object.getCountVoteAlreadyLived())
            exclusion:
                groups: [stats]

        -
            rel: theme
            embedded:
                content: expr(object.getTheme())
            exclusion:
                groups: [meta]

        -
            rel: emotion
            embedded:
                content: expr(object.getEmotion())
            exclusion:
                groups: [meta]

        -
            rel: user_has_vote_for_is_sexist
            embedded:
                content: expr(object.isUserHasVoteSexist())
            exclusion:
                groups: [stats]

        -
            rel: user_has_vote_for_already_lived
            embedded:
                content: expr(object.isUserHasVoteLived())
            exclusion:
                groups: [stats]
