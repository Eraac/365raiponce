<?php

namespace LKE\RemarkBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * RemarkRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RemarkRepository extends EntityRepository
{
    public function getPostedRemark($limit, $page)
    {
        $qb = $this->createQueryBuilder('r')
            ->leftJoin('r.theme', 't')
            ->leftJoin('r.emotion', 'e')
            ->leftJoin('r.responses', 're')
            ->addSelect('t')
            ->addSelect('e')
            ->addSelect('re')
            ->where('r.postedAt is not null')
            ->orderBy('r.postedAt', 'DESC')
            ->setMaxResults($limit)
            ->setFirstResult($page * $limit);

        return $qb->getQuery()->getResult();
    }

    public function getUserRemarks($idUser, $limit, $page)
    {
        $qb = $this->createQueryBuilder('r')
            ->where('r.author = :user')
            ->setParameter('user', $idUser)
            ->setMaxResults($limit)
            ->setFirstResult($page * $limit);

        return $qb->getQuery()->getResult();
    }

    public function getUnpublishedRemark($limit, $page)
    {
        $qb = $this->createQueryBuilder('r')
            ->where('r.postedAt is null')
            ->setMaxResults($limit)
            ->setFirstResult($page * $limit);

        return $qb->getQuery()->getResult();
    }

    public function getCompleteRemark($id)
    {
        $qb = $this->createQueryBuilder('r')
                ->leftJoin('r.theme', 't')
                ->leftJoin('r.emotion', 'e')
                ->addSelect('t')
                ->addSelect('e')
                ->where('r.id = :id')
                ->setParameter('id', $id);

        return $qb->getQuery()->getOneOrNullResult();
    }
}
